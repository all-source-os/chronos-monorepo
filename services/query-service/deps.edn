{:paths ["src" "resources"]

 :deps {org.clojure/clojure {:mvn/version "1.11.1"}

        ;; Component system for dependency injection
        com.stuartsierra/component {:mvn/version "1.1.0"}
        mount/mount {:mvn/version "0.1.17"}

        ;; HTTP client
        clj-http/clj-http {:mvn/version "3.12.3"}
        http-kit/http-kit {:mvn/version "2.7.0"}

        ;; JSON processing
        cheshire/cheshire {:mvn/version "5.12.0"}

        ;; Data validation
        metosin/malli {:mvn/version "0.13.0"}

        ;; Error handling (Either monad)
        funcool/cats {:mvn/version "2.4.2"}

        ;; Pretty printing
        fipp/fipp {:mvn/version "0.6.26"}

        ;; Logging
        org.clojure/tools.logging {:mvn/version "1.2.4"}
        ch.qos.logback/logback-classic {:mvn/version "1.4.11"}

        ;; Metrics
        io.dropwizard.metrics/metrics-core {:mvn/version "4.2.19"}

        ;; Web server (for query API)
        ring/ring-core {:mvn/version "1.10.0"}
        ring/ring-jetty-adapter {:mvn/version "1.10.0"}
        compojure/compojure {:mvn/version "1.7.0"}
        ring/ring-json {:mvn/version "0.5.1"}

        ;; Time handling
        clojure.java-time/clojure.java-time {:mvn/version "1.4.2"}

        ;; Database - PostgreSQL (for projection state persistence)
        org.clojure/java.jdbc {:mvn/version "0.7.12"}
        org.postgresql/postgresql {:mvn/version "42.6.0"}
        com.zaxxer/HikariCP {:mvn/version "5.0.1"}

        ;; Redis (for projection state caching)
        com.taoensso/carmine {:mvn/version "3.3.2"}

        ;; Core.async (for pipelines)
        org.clojure/core.async {:mvn/version "1.6.681"}}

 :aliases
 {:dev
  {:extra-paths ["dev" "test"]
   :extra-deps {nrepl/nrepl {:mvn/version "1.0.0"}
                cider/cider-nrepl {:mvn/version "0.42.1"}
                reply/reply {:mvn/version "0.5.1"}}}

  :test
  {:extra-paths ["test"]
   :extra-deps {org.clojure/test.check {:mvn/version "1.1.1"}
                nubank/matcher-combinators {:mvn/version "3.8.8"}}
   :main-opts ["-m" "cognitect.test-runner"]
   :exec-fn cognitect.test-runner.api/test}

  :repl
  {:extra-deps {nrepl/nrepl {:mvn/version "1.0.0"}
                cider/cider-nrepl {:mvn/version "0.42.1"}}
   :main-opts ["-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "--interactive"]}

  :build
  {:deps {io.github.clojure/tools.build {:git/tag "v0.9.6" :git/sha "8e78bcc"}}
   :ns-default build}

  :uberjar
  {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.1.303"}}
   :exec-fn hf.depstar/uberjar
   :exec-args {:aot true
               :jar "target/query-service.jar"
               :main-class allsource.core
               :sync-pom true}}}}
